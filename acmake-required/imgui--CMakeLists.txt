
# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.16)

# Set the project name
set(PROJECT_NAME imgui)
project(${PROJECT_NAME})

file(GLOB IMGUI_SRC_FILES
  "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp"
)

file(GLOB IMGUI_HEADERS_FILES
  "${CMAKE_CURRENT_SOURCE_DIR}/*.h"
)

file(GLOB IMGUI_SRC_MISC_FILES
  "${CMAKE_CURRENT_SOURCE_DIR}/misc/cpp/*.cpp"
)

# Add the source files to the project
add_library(${PROJECT_NAME} STATIC
			${IMGUI_SRC_FILES}
			${IMGUI_HEADERS_FILES}
			${IMGUI_SRC_MISC_FILES}
			"${CMAKE_CURRENT_SOURCE_DIR}/backends/imgui_impl_opengl3.cpp"
			"${CMAKE_CURRENT_SOURCE_DIR}/backends/imgui_impl_opengl3.h"
			"${CMAKE_CURRENT_SOURCE_DIR}/backends/imgui_impl_opengl3_loader.h"
			# "${CMAKE_CURRENT_SOURCE_DIR}/backends/imgui_impl_glfw.cpp"
			# "${CMAKE_CURRENT_SOURCE_DIR}/backends/imgui_impl_glfw.h"
)

target_compile_definitions(imgui PRIVATE IMGUI_IMPL_OPENGL_LOADER_GLAD=1)
# target_compile_definitions(imgui PRIVATE IMGUI_IMPL_OPENGL_LOADER_CUSTOM=1)

# Link the glad dll with the required libraries depending on the system
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
	message(STATUS "ImGui for Windows")
	# (as we are using Windows with mingw64, we need also opengl32 gdi32 for imgui)
	target_link_libraries(${PROJECT_NAME} glfw opengl32 gdi32)

elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	message(STATUS "ImGui for Linux")
	#target_link_libraries(${PROJECT_NAME})
endif()